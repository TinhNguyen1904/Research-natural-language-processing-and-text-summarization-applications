# -*- coding: utf-8 -*-
"""Spacy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BNnT9V-B7jDjdLI6QYE20lQyrW3C0JyG
"""

import spacy
from spacy.lang.en.stop_words import STOP_WORDS
from string import punctuation

#Doc data
extra_words=list(STOP_WORDS)+list(punctuation)+['\n']
nlp=spacy.load('en')
#import spacy    
#nlp=spacy.load("en")
nlp.Defaults.stop_words |={"cũng","của","cho","các","còn","có","khi","là","làm","ngoài","nhiều","như","nhất","những","này","nó","ra","sau","theo","thuộc","trong","trên","tại","từ","và","vào","về","với","xem","đã","đó","được","đến","để"}

doc = """Bé 18 tháng tuổi ở TP.HCM dương tính với nCoV. Bệnh nhi là cháu ngoại của bà chủ quán bánh canh ở hẻm 287, đường Nguyễn Đình Chiểu, quận 3, TP.HCM.
Sáng 24/5, theo Trung tâm Kiểm soát Bệnh tật TP.HCM (HCDC), bệnh nhi này được xét nghiệm Covid-19 lần 2 sau khi có biểu hiện sốt nhẹ. Bé thuộc diện F1 do từng tiếp xúc bà ngoại vào các ngày 15/5 và 18/5.

Giám đốc Sở Y tế Nguyễn Tấn Bỉnh cho biết bé ở cùng gia đình tại quận Tân Bình. Bệnh nhi được điều trị tại Bệnh viện Nhi đồng Thành phố.

Như vậy, 4 người cùng gia đình trú tại hẻm 287, đường Nguyễn Đình Chiểu, quận 3, đã có kết quả dương tính với SARS-CoV-2. Người đầu tiên được phát hiện nhiễm virus trong chùm ca bệnh này là bà Đ.T.T. (58 tuổi) khi đến khám tại Bệnh viện Phạm Ngọc Thạch. Sau đó, hai người con gái sống cùng nhà cũng có kết quả tương tự.

Các bệnh nhân này nhiễm biến chủng Anh. Đây là biến chủng đang gây ra ổ dịch tại Đà Nẵng, Hà Nam.

Trong đợt bùng phát dịch từ ngày 27/4 đến nay, theo công bố của Bộ Y tế, TP.HCM có 6 bệnh nhân mắc Covid-19. Trường hợp đầu tiên được ghi nhận ngày 29/4 là bệnh nhân quê Hà Nam, F1 của ca dương tính sau khi kết thúc cách ly tập trung.

Sau 20 ngày, thành phố tiếp tục ghi nhận thêm hai chuỗi lây nhiễm SARS-CoV-2. Ngoài chùm ca bệnh trong gia đình bán bánh canh, hai đồng nghiệp làm việc cùng công ty ở quận 3 (gồm nam bệnh nhân trú tại TP Thủ Đức và người phụ nữ ở quận 7) cũng được xác định mắc Covid-19. Họ cùng nhiễm biến chủng Ấn Độ. Cơ quan chức năng nhận định, nữ bệnh nhân ở quận 7 là nguồn lây. Người này từng đến Hải Phòng."""
docx = nlp(doc)

extra_words=list(STOP_WORDS)+list(punctuation)+['\n']
nlp=spacy.load('en')
doc = """Bé 18 tháng tuổi TP.HCM dương tính với nCoV. Bệnh nhi là cháu ngoại của bà chủ quán bánh canh hẻm 287, đường Nguyễn Đình Chiểu, quận 3, TP.HCM. Giám đốc Sở Y tế Nguyễn Tấn Bỉnh cho biết bé cùng gia đình tại quận Tân Bình. Bệnh nhi được điều trị tại Bệnh viện Nhi đồng Thành phố."""
docx = nlp(doc)

#Tạo bộ từ vựng
#Tất cả các từ thừa bị loại bỏ và số lượng của từng từ khác được nhập vào từ điển
all_words=[word.text for word in docx]
Freq_word={}
for w in all_words:
      w1=w.lower()
      if w1 not in extra_words and w1.isalpha():
          if w1 in Freq_word.keys():
              Freq_word[w1]+=1
          else:
              Freq_word[w1]=1

Freq_word

#Tạo tiêu đề
val=sorted(Freq_word.values())
max_freq=val[-3:]
print("Topic of document given :-")
for word,freq in Freq_word.items():
      if freq in max_freq:
          print(word ,end=" ")
      else:
          continue

max_freq[-1]

#Tần suất tài liệu nghịch đảo - biểu thị mức độ quan trọng của một từ nhất định đối với một tài liệu trên một bộ sưu tập hoàn chỉnh.
for word in Freq_word.keys():
       Freq_word[word] = (Freq_word[word]/max_freq[-1])

Freq_word

#Tìm các câu có trọng số quan trọng trong đoạn
sent_strength={}
for sent in docx.sents:
      for word in sent :
             if word.text.lower() in Freq_word.keys():
                 if sent in sent_strength.keys():
                     sent_strength[sent]+=Freq_word[word.text.lower()]
                 else:
                     sent_strength[sent]=Freq_word[word.text.lower()]
             else: 
                continue

sent_strength

#Lọc các câu quan trọng
top_sentences=(sorted(sent_strength.values())[::-1])
top30percent_sentence=int(0.3*len(top_sentences))
top_sent=top_sentences[:top30percent_sentence]

#Tạo đoạn tóm tắt
summary=[]
for sent,strength in sent_strength.items():
       if strength in top_sent:
          summary.append(sent)
       else:
          continue

for i in summary:
  print(i,end="")